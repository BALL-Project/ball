# This script creates a fixed an dragndroppable BALLView Bundle

# Define some useful variables
SET(BALLVIEW_BUNDLE_DIR           ${CMAKE_INSTALL_PREFIX}/BALLView.app)
SET(BALLVIEW_BUNDLE_DIR_CONTENTS  ${BALLVIEW_BUNDLE_DIR}/Contents)
SET(ITEMS_TO_FIX "")


# First, install BALLView.app Bundle stub
FILE(INSTALL @CMAKE_RUNTIME_OUTPUT_DIRECTORY@/BALLView.app DESTINATION ${CMAKE_INSTALL_PREFIX} USE_SOURCE_PERMISSIONS)


# Manually install Python and SIP libraries and files
FILE(INSTALL @SIP_LIBRARIES@ DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/Frameworks USE_SOURCE_PERMISSIONS)

FILE(GLOB TMP_GLOB_RESULT "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@/*.py")
FILE(INSTALL ${TMP_GLOB_RESULT} DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/Frameworks USE_SOURCE_PERMISSIONS)

FILE(GLOB TMP_GLOB_RESULT "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@/*.so")
FILE(INSTALL ${TMP_GLOB_RESULT} DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/Frameworks USE_SOURCE_PERMISSIONS)
LIST(APPEND ITEMS_TO_FIX ${TMP_GLOB_RESULT})


# Manually install BALL plugins into the Bundle
FILE(GLOB TMP_GLOB_RESULT "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@/plugin*.dylib")
FILE(INSTALL ${TMP_GLOB_RESULT} DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/plugins USE_SOURCE_PERMISSIONS)
LIST(APPEND ITEMS_TO_FIX ${TMP_GLOB_RESULT})


# Copy BALL data folder into the Bundle
FILE(INSTALL @CMAKE_SOURCE_DIR@/data DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/Resources USE_SOURCE_PERMISSIONS)


# Copy documentation into the Bundle
FILE(INSTALL @CMAKE_SOURCE_DIR@/doc/internal @CMAKE_SOURCE_DIR@/doc/BALLView DESTINATION ${BALLVIEW_BUNDLE_DIR_CONTENTS}/Resources/doc USE_SOURCE_PERMISSIONS)


# Finally, run macdeployqt on BALLView.app
EXECUTE_PROCESS(COMMAND @MACDEPLOYQT_EXECUTABLE@ ${BALLVIEW_BUNDLE_DIR})


# Fix items not handled by macdeployqt, like the SIP Python .so files
FOREACH(ITEM ${ITEMS_TO_FIX})

	EXECUTE_PROCESS(COMMAND bash -c "otool -L ${ITEM} | awk '{if (NR >= 2) print $1}' | grep -v -E '(^@|^/usr/lib|^/System)' | tr '\n' ';'"
			OUTPUT_VARIABLE INSTALL_NAMES
			WORKING_DIRECTORY ${BALLVIEW_BUNDLE_DIR})

	FOREACH(INSTALL_NAME ${INSTALL_NAMES})
		GET_FILENAME_COMPONENT(INSTALL_NAME_BASE ${INSTALL_NAME} NAME)
		FILE(GLOB_RECURSE INSTALL_NAME_IN_BUNDLE RELATIVE ${BALLVIEW_BUNDLE_DIR_CONTENTS} ${BALLVIEW_BUNDLE_DIR_CONTENTS}/*${INSTALL_NAME_BASE})

		IF("${ITEM}" MATCHES "^.*/${INSTALL_NAME_BASE}")
			EXECUTE_PROCESS(COMMAND install_name_tool -id "@executable_path/../${INSTALL_NAME_IN_BUNDLE}" ${ITEM})
		ELSE()
			EXECUTE_PROCESS(COMMAND install_name_tool -change ${INSTALL_NAME} "@executable_path/../${INSTALL_NAME_IN_BUNDLE}" ${ITEM})
		ENDIF()
	ENDFOREACH()

ENDFOREACH()
