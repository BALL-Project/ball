### Build rules for BALL's class tests
PROJECT("BALL_tests")

ENABLE_TESTING()

OPTION(BALL_TEST_VERBOSE "Use verbose output for the tests" ON)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/TEST)
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})

## For now, disable optimization for the tests
IF (CMAKE_COMPILER_IS_INTELCXX OR CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS_RELEASE_SAVED ${CMAKE_CXX_FLAGS_RELEASE})
	SET(CMAKE_CXX_FLAGS_RELEASE "-O0")
ENDIF()

## On 32 Bit Windows, disable optimization for the tests
IF(CMAKE_GENERATOR STREQUAL "Visual Studio 10")
	SET(CMAKE_CXX_FLAGS_RELEASE_SAVED ${CMAKE_CXX_FLAGS_RELEASE})
	SET(CMAKE_CXX_FLAGS_RELEASE "-O0")
ENDIF()

INCLUDE(cmake/BALLTestExecutables.cmake)
INCLUDE(cmake/VIEWTestExecutables.cmake)

## BASIC
ADD_CUSTOM_TARGET(BASIC_TESTS)
ADD_DEPENDENCIES(BASIC_TESTS ${BALL_BASIC_TESTS})

## MATHS
ADD_CUSTOM_TARGET(MATHS_TESTS)
ADD_DEPENDENCIES(MATHS_TESTS ${BALL_MATHS_TESTS})

## SYSTEM
ADD_CUSTOM_TARGET(SYSTEM_TESTS)
ADD_DEPENDENCIES(SYSTEM_TESTS ${BALL_SYSTEM_TESTS})

## TODO: all of them...

## Restore build flags
IF (CMAKE_COMPILER_IS_INTELCXX OR CMAKE_COMPILER_IS_GNUCXX)
	SET(${CMAKE_CXX_FLAGS_RELEASE} ${CMAKE_CXX_FLAGS_RELEASE_SAVED})
ENDIF()

SET(BALLTEST_SUPPORT_LIBRARIES "")
IF (UNIX)
	LIST(APPEND BALLTEST_SUPPORT_LIBRARIES "pthread")
ENDIF ()

# Now, add all tests as targets
SET(ALL_TESTS "")
FOREACH(group ${BALL_TESTS})
	FOREACH(test ${${group}})
		ADD_EXECUTABLE(${test} ${test}.C)
		TARGET_LINK_LIBRARIES(${test} BALL ${BALLTEST_SUPPORT_LIBRARIES})
		SET_PROPERTY(TARGET ${test} PROPERTY FOLDER ${group})
		SET_TARGET_PROPERTIES(${test} PROPERTIES COMPILE_FLAGS "${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
		IF (NOT BALL_TEST_VERBOSE)
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test})
		ELSE()
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test} "-v")
		ENDIF()
		LIST(APPEND ALL_TESTS ${test})
	ENDFOREACH()
ENDFOREACH()

# Set the timeout of some tests to 2h
# This is needed for the memcheck running on the CI server
# which takes _very_ long
SET_TESTS_PROPERTIES (
	ScoringFunction_test
	AssignBondOrderProcessor_test1
	AssignBondOrderProcessor_test2
	PROPERTIES TIMEOUT 7200
)

IF (BALL_HAS_VIEW)
	FOREACH(test ${VIEW_TESTS})
		ADD_EXECUTABLE(${test} ${test}.C)
		TARGET_LINK_LIBRARIES(${test} BALL VIEW ${BALLTEST_SUPPORT_LIBRARIES})
		SET_TARGET_PROPERTIES(${test} PROPERTIES COMPILE_FLAGS "${Qt5Core_EXECUTABLE_COMPILE_FLAGS}")
		SET_PROPERTY(TARGET ${test} PROPERTY FOLDER BALL_VIEW_TESTS)
		IF (NOT BALL_TEST_VERBOSE)
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test})
		ELSE()
			ADD_TEST(${test} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${test} "-v")
		ENDIF()
	ENDFOREACH()

	LIST(APPEND ALL_TESTS ${VIEW_TESTS})
ENDIF()

# Create a suitable target
ADD_CUSTOM_TARGET(build_tests)
ADD_DEPENDENCIES(build_tests ${ALL_TESTS})
